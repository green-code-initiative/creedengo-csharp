name: Versioning

on:
  workflow_call:
    outputs:
      tag:
        value: ${{ jobs.versioning.outputs.tag }}
      version:
        value: ${{ jobs.versioning.outputs.version }}  

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.versioning.outputs.tag }}
      version: ${{ steps.versioning.outputs.version }} # same as tag but without the -betaN part at the end, if present
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Necessary to fetch tags
    - name: Install xmlstarlet
      run: |
        sudo apt-get update
        sudo apt-get install -y xmlstarlet
    - id: versioning
      run: |
        TAG=${GITHUB_REF#refs/tags/}

        TAG_COMMIT=$(git rev-list -n 1 $TAG)
        MAIN_BRANCH_COMMIT=$(git rev-parse origin/${{ github.event.repository.default_branch }})
        if ! git merge-base --is-ancestor $TAG_COMMIT $MAIN_BRANCH_COMMIT; then
          echo "Tag is not on the main branch, stopping workflow."
          exit 1
        fi

        if [[ $TAG =~ ^([0-9]+\.[0-9]+\.[0-9]+)(-beta[0-9]+)?$ ]]; then
          echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
        else
          echo "Error: Tag does not match the expected format 'X.Y.Z' or 'X.Y.Z-betaN'"
          exit 1
        fi
    - name: Set Version in Directory.Build.props
      run: xmlstarlet ed --inplace -u "/Project/PropertyGroup/Version" -v "${{ steps.versioning.outputs.version }}" Directory.Build.props
    - name: Set Version in VSIX manifest
      shell: pwsh
      run: |
        [xml]$manifest = Get-Content "src/EcoCode.Vsix/source.extension.vsixmanifest"
        $identity = $manifest.SelectSingleNode("//*[local-name()='Identity']")
        if ($identity -ne $null) {
            $identity.Version = "${{ steps.versioning.outputs.version }}"
        }
        $manifest.Save("src/EcoCode.Vsix/source.extension.vsixmanifest")
    - name: Cache updated sources
      uses: actions/cache/save@v4
      with:
        path: |
          !**/.git
          **/*
        key: cache-${{ github.sha }}
        enableCrossOsArchive: true

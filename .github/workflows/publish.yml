# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: publish

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published

defaults:
  run:
    shell: pwsh

jobs:
  create_package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Pack
      run: dotnet pack --configuration Release --no-build --output ${{ env.NuGetDirectory }}
    - uses: actions/upload-artifact@v4
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg
    
  run_tests:
    runs-on: ubuntu-latest
    needs: [ create_package ]
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Run tests
      run: dotnet test --configuration Release --no-restore

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ run_tests ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
      - name: Publish NuGet package # Use --skip-duplicate to overwrite an existing version
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }